version: 0.1
component: build
timeoutInSeconds: 6000
shell: bash
env:
  exportedVariables:
    - OCIR_PATH
    - TAG
    - APP_NAME

steps:
  - type: Command
    name: "Init exportedVariables"
    timeoutInSeconds: 4000
    command: |
      APP_NAME="spring-boot-app"

  - type: Command
    name: "Build Source"
    timeoutInSeconds: 4000
    command: |
      echo none

  - type: Command
    name: "Define Image Tag - Commit ID"
    timeoutInSeconds: 30
    command: |
      COMMIT_ID=`echo ${OCI_TRIGGER_COMMIT_HASH} | cut -c 1-7`
      BUILDRUN_HASH=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      [ -z "$COMMIT_ID" ] && TAG=$BUILDRUN_HASH || TAG=$COMMIT_ID

  - type: Command
    name: "Define OCIR Path"
    timeoutInSeconds: 30
    command: |
      if [ -z "${REPO_NAME_PREFIX}" ] ; then
          REPO_NAME=$APP_NAME
      else
          REPO_NAME=$REPO_NAME_PREFIX/$APP_NAME

          if [ ! -z "$COMPARTMENT_ID" ] ; then
              oci artifacts container repository create --display-name $REPO_NAME --compartment-id $COMPARTMENT_ID
          fi
      fi
      TENANCY_NAMESPACE=`oci os ns get --query data --raw-output`
      OCIR_PATH=$OCI_RESOURCE_PRINCIPAL_REGION.ocir.io/$TENANCY_NAMESPACE/$REPO_NAME

  - type: Command
    timeoutInSeconds: 400
    name: "Containerize"
    command: |
      export DOCKER_BUILDKIT=1
      docker build -t new-generated-image .
      docker images

  - type: Command
    name: "Check exportedVariables"
    timeoutInSeconds: 30
    command: |  
      [ -z "$APP_NAME" ] && APP_NAME=unknown          
      [ -z "$OCIR_PATH" ] && OCIR_PATH=unknown    
      [ -z "$TAG" ] && TAG=unknown
      echo "APP_NAME: " $APP_NAME      
      echo "OCIR_PATH: " $OCIR_PATH
      echo "TAG: " $TAG

outputArtifacts:
  - name: output-image
    type: DOCKER_IMAGE
    location: new-generated-image